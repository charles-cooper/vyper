name: Build artifacts

on:
  workflow_dispatch:
    inputs:
      tag:
        default: ''
  push:
    branches:
      - master
  release:
    types: [released]

defaults:
  run:
    shell: bash

jobs:
  unix-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
            # grab the commit passed in via `tag`, if any
            ref: ${{ github.event.inputs.tag }}
            # need to fetch unshallow so that setuptools_scm can infer the version
            fetch-depth: 0

      - name: Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Generate Binary
        run: >-
          pip install . &&
          pip install pyinstaller &&
          make freeze

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/vyper.*

      - name: Publish release assets
        if: ${{ github.event_name == 'release' }}
        run: |
          export BIN_NAME=$(ls dist/vyper.* | xargs basename) && \
          curl -L \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "Content-Type: application/octet-stream" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=${BIN_NAME}" \
            --data-binary "@dist/${BIN_NAME}"

  windows-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
            # grab the commit passed in via `tag`, if any
            ref: ${{ github.event.inputs.tag }}
            # need to fetch unshallow so that setuptools_scm can infer the version
            fetch-depth: 0

      - name: Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Generate Binary
        run: >-
          pip install . &&
          pip install pyinstaller &&
          ./make.cmd freeze

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/vyper.*

      - name: Publish release assets
        if: ${{ github.event_name == 'release' }}
        shell: bash
        run: |
          export BIN_NAME=$(ls dist/vyper.* | xargs basename)
          curl -L \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "Content-Type: application/octet-stream" \
            https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.payload.release.release_id }}/assets?name=$(BIN_NAME) \
            --data-binary "@$(BIN_NAME)"